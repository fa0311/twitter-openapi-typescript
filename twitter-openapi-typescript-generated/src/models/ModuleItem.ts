/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModuleEntry } from './ModuleEntry';
import {
    ModuleEntryFromJSON,
    ModuleEntryFromJSONTyped,
    ModuleEntryToJSON,
    ModuleEntryToJSONTyped,
} from './ModuleEntry';

/**
 * 
 * @export
 * @interface ModuleItem
 */
export interface ModuleItem {
    /**
     * 
     * @type {boolean}
     * @memberof ModuleItem
     */
    dispensable?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ModuleItem
     */
    entryId: string;
    /**
     * 
     * @type {ModuleEntry}
     * @memberof ModuleItem
     */
    item: ModuleEntry;
}

/**
 * Check if a given object implements the ModuleItem interface.
 */
export function instanceOfModuleItem(value: object): value is ModuleItem {
    if (!('entryId' in value) || value['entryId'] === undefined) return false;
    if (!('item' in value) || value['item'] === undefined) return false;
    return true;
}

export function ModuleItemFromJSON(json: any): ModuleItem {
    return ModuleItemFromJSONTyped(json, false);
}

export function ModuleItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModuleItem {
    if (json == null) {
        return json;
    }
    return {
        
        'dispensable': json['dispensable'] == null ? undefined : json['dispensable'],
        'entryId': json['entryId'],
        'item': ModuleEntryFromJSON(json['item']),
    };
}

export function ModuleItemToJSON(json: any): ModuleItem {
    return ModuleItemToJSONTyped(json, false);
}

export function ModuleItemToJSONTyped(value?: ModuleItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dispensable': value['dispensable'],
        'entryId': value['entryId'],
        'item': ModuleEntryToJSON(value['item']),
    };
}

