/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TombstoneInfo } from './TombstoneInfo';
import {
    TombstoneInfoFromJSON,
    TombstoneInfoFromJSONTyped,
    TombstoneInfoToJSON,
    TombstoneInfoToJSONTyped,
} from './TombstoneInfo';
import type { TypeName } from './TypeName';
import {
    TypeNameFromJSON,
    TypeNameFromJSONTyped,
    TypeNameToJSON,
    TypeNameToJSONTyped,
} from './TypeName';
import type { ContentItemType } from './ContentItemType';
import {
    ContentItemTypeFromJSON,
    ContentItemTypeFromJSONTyped,
    ContentItemTypeToJSON,
    ContentItemTypeToJSONTyped,
} from './ContentItemType';

/**
 * 
 * @export
 * @interface TimelineTombstone
 */
export interface TimelineTombstone {
    /**
     * 
     * @type {TypeName}
     * @memberof TimelineTombstone
     */
    typename?: TypeName;
    /**
     * 
     * @type {ContentItemType}
     * @memberof TimelineTombstone
     */
    itemType?: ContentItemType;
    /**
     * 
     * @type {string}
     * @memberof TimelineTombstone
     */
    tombstoneDisplayType?: TimelineTombstoneTombstoneDisplayTypeEnum;
    /**
     * 
     * @type {TombstoneInfo}
     * @memberof TimelineTombstone
     */
    tombstoneInfo?: TombstoneInfo;
}


/**
 * @export
 */
export const TimelineTombstoneTombstoneDisplayTypeEnum = {
    Inline: 'Inline'
} as const;
export type TimelineTombstoneTombstoneDisplayTypeEnum = typeof TimelineTombstoneTombstoneDisplayTypeEnum[keyof typeof TimelineTombstoneTombstoneDisplayTypeEnum];


/**
 * Check if a given object implements the TimelineTombstone interface.
 */
export function instanceOfTimelineTombstone(value: object): value is TimelineTombstone {
    return true;
}

export function TimelineTombstoneFromJSON(json: any): TimelineTombstone {
    return TimelineTombstoneFromJSONTyped(json, false);
}

export function TimelineTombstoneFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimelineTombstone {
    if (json == null) {
        return json;
    }
    return {
        
        'typename': json['__typename'] == null ? undefined : TypeNameFromJSON(json['__typename']),
        'itemType': json['itemType'] == null ? undefined : ContentItemTypeFromJSON(json['itemType']),
        'tombstoneDisplayType': json['tombstoneDisplayType'] == null ? undefined : json['tombstoneDisplayType'],
        'tombstoneInfo': json['tombstoneInfo'] == null ? undefined : TombstoneInfoFromJSON(json['tombstoneInfo']),
    };
}

export function TimelineTombstoneToJSON(json: any): TimelineTombstone {
    return TimelineTombstoneToJSONTyped(json, false);
}

export function TimelineTombstoneToJSONTyped(value?: TimelineTombstone | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '__typename': TypeNameToJSON(value['typename']),
        'itemType': ContentItemTypeToJSON(value['itemType']),
        'tombstoneDisplayType': value['tombstoneDisplayType'],
        'tombstoneInfo': TombstoneInfoToJSON(value['tombstoneInfo']),
    };
}

