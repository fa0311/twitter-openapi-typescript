/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypeName } from './TypeName';
import {
    TypeNameFromJSON,
    TypeNameFromJSONTyped,
    TypeNameToJSON,
    TypeNameToJSONTyped,
} from './TypeName';
import type { SocialContextUnion } from './SocialContextUnion';
import {
    SocialContextUnionFromJSON,
    SocialContextUnionFromJSONTyped,
    SocialContextUnionToJSON,
    SocialContextUnionToJSONTyped,
} from './SocialContextUnion';
import type { ThumbnailImage } from './ThumbnailImage';
import {
    ThumbnailImageFromJSON,
    ThumbnailImageFromJSONTyped,
    ThumbnailImageToJSON,
    ThumbnailImageToJSONTyped,
} from './ThumbnailImage';
import type { SocialContextLandingUrl } from './SocialContextLandingUrl';
import {
    SocialContextLandingUrlFromJSON,
    SocialContextLandingUrlFromJSONTyped,
    SocialContextLandingUrlToJSON,
    SocialContextLandingUrlToJSONTyped,
} from './SocialContextLandingUrl';
import type { TrendMetadata } from './TrendMetadata';
import {
    TrendMetadataFromJSON,
    TrendMetadataFromJSONTyped,
    TrendMetadataToJSON,
    TrendMetadataToJSONTyped,
} from './TrendMetadata';
import type { TrendImage } from './TrendImage';
import {
    TrendImageFromJSON,
    TrendImageFromJSONTyped,
    TrendImageToJSON,
    TrendImageToJSONTyped,
} from './TrendImage';
import type { ContentItemType } from './ContentItemType';
import {
    ContentItemTypeFromJSON,
    ContentItemTypeFromJSONTyped,
    ContentItemTypeToJSON,
    ContentItemTypeToJSONTyped,
} from './ContentItemType';

/**
 * 
 * @export
 * @interface TimelineTrend
 */
export interface TimelineTrend {
    /**
     * 
     * @type {TypeName}
     * @memberof TimelineTrend
     */
    typename: TypeName;
    /**
     * 
     * @type {Array<TrendImage>}
     * @memberof TimelineTrend
     */
    images: Array<TrendImage>;
    /**
     * 
     * @type {boolean}
     * @memberof TimelineTrend
     */
    isAiTrend?: boolean;
    /**
     * 
     * @type {ContentItemType}
     * @memberof TimelineTrend
     */
    itemType: ContentItemType;
    /**
     * 
     * @type {string}
     * @memberof TimelineTrend
     */
    name: string;
    /**
     * 
     * @type {SocialContextUnion}
     * @memberof TimelineTrend
     */
    socialContext?: SocialContextUnion;
    /**
     * 
     * @type {ThumbnailImage}
     * @memberof TimelineTrend
     */
    thumbnailImage: ThumbnailImage;
    /**
     * 
     * @type {TrendMetadata}
     * @memberof TimelineTrend
     */
    trendMetadata: TrendMetadata;
    /**
     * 
     * @type {SocialContextLandingUrl}
     * @memberof TimelineTrend
     */
    trendUrl: SocialContextLandingUrl;
}



/**
 * Check if a given object implements the TimelineTrend interface.
 */
export function instanceOfTimelineTrend(value: object): value is TimelineTrend {
    if (!('typename' in value) || value['typename'] === undefined) return false;
    if (!('images' in value) || value['images'] === undefined) return false;
    if (!('itemType' in value) || value['itemType'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('thumbnailImage' in value) || value['thumbnailImage'] === undefined) return false;
    if (!('trendMetadata' in value) || value['trendMetadata'] === undefined) return false;
    if (!('trendUrl' in value) || value['trendUrl'] === undefined) return false;
    return true;
}

export function TimelineTrendFromJSON(json: any): TimelineTrend {
    return TimelineTrendFromJSONTyped(json, false);
}

export function TimelineTrendFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimelineTrend {
    if (json == null) {
        return json;
    }
    return {
        
        'typename': TypeNameFromJSON(json['__typename']),
        'images': ((json['images'] as Array<any>).map(TrendImageFromJSON)),
        'isAiTrend': json['is_ai_trend'] == null ? undefined : json['is_ai_trend'],
        'itemType': ContentItemTypeFromJSON(json['itemType']),
        'name': json['name'],
        'socialContext': json['social_context'] == null ? undefined : SocialContextUnionFromJSON(json['social_context']),
        'thumbnailImage': ThumbnailImageFromJSON(json['thumbnail_image']),
        'trendMetadata': TrendMetadataFromJSON(json['trend_metadata']),
        'trendUrl': SocialContextLandingUrlFromJSON(json['trend_url']),
    };
}

export function TimelineTrendToJSON(json: any): TimelineTrend {
    return TimelineTrendToJSONTyped(json, false);
}

export function TimelineTrendToJSONTyped(value?: TimelineTrend | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '__typename': TypeNameToJSON(value['typename']),
        'images': ((value['images'] as Array<any>).map(TrendImageToJSON)),
        'is_ai_trend': value['isAiTrend'],
        'itemType': ContentItemTypeToJSON(value['itemType']),
        'name': value['name'],
        'social_context': SocialContextUnionToJSON(value['socialContext']),
        'thumbnail_image': ThumbnailImageToJSON(value['thumbnailImage']),
        'trend_metadata': TrendMetadataToJSON(value['trendMetadata']),
        'trend_url': SocialContextLandingUrlToJSON(value['trendUrl']),
    };
}

