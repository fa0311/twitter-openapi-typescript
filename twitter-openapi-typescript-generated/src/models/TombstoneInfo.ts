/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TombstoneRichText } from './TombstoneRichText';
import {
    TombstoneRichTextFromJSON,
    TombstoneRichTextFromJSONTyped,
    TombstoneRichTextToJSON,
    TombstoneRichTextToJSONTyped,
} from './TombstoneRichText';

/**
 * 
 * @export
 * @interface TombstoneInfo
 */
export interface TombstoneInfo {
    /**
     * 
     * @type {TombstoneRichText}
     * @memberof TombstoneInfo
     */
    richText?: TombstoneRichText;
    /**
     * 
     * @type {string}
     * @memberof TombstoneInfo
     */
    text?: string;
}

/**
 * Check if a given object implements the TombstoneInfo interface.
 */
export function instanceOfTombstoneInfo(value: object): value is TombstoneInfo {
    return true;
}

export function TombstoneInfoFromJSON(json: any): TombstoneInfo {
    return TombstoneInfoFromJSONTyped(json, false);
}

export function TombstoneInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TombstoneInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'richText': json['richText'] == null ? undefined : TombstoneRichTextFromJSON(json['richText']),
        'text': json['text'] == null ? undefined : json['text'],
    };
}

export function TombstoneInfoToJSON(json: any): TombstoneInfo {
    return TombstoneInfoToJSONTyped(json, false);
}

export function TombstoneInfoToJSONTyped(value?: TombstoneInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'richText': TombstoneRichTextToJSON(value['richText']),
        'text': value['text'],
    };
}

