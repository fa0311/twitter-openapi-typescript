/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TombstoneRef
 */
export interface TombstoneRef {
    /**
     * 
     * @type {string}
     * @memberof TombstoneRef
     */
    type?: TombstoneRefTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TombstoneRef
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof TombstoneRef
     */
    urlType?: TombstoneRefUrlTypeEnum;
}


/**
 * @export
 */
export const TombstoneRefTypeEnum = {
    TimelineUrl: 'TimelineUrl'
} as const;
export type TombstoneRefTypeEnum = typeof TombstoneRefTypeEnum[keyof typeof TombstoneRefTypeEnum];

/**
 * @export
 */
export const TombstoneRefUrlTypeEnum = {
    ExternalUrl: 'ExternalUrl'
} as const;
export type TombstoneRefUrlTypeEnum = typeof TombstoneRefUrlTypeEnum[keyof typeof TombstoneRefUrlTypeEnum];


/**
 * Check if a given object implements the TombstoneRef interface.
 */
export function instanceOfTombstoneRef(value: object): value is TombstoneRef {
    return true;
}

export function TombstoneRefFromJSON(json: any): TombstoneRef {
    return TombstoneRefFromJSONTyped(json, false);
}

export function TombstoneRefFromJSONTyped(json: any, ignoreDiscriminator: boolean): TombstoneRef {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'url': json['url'] == null ? undefined : json['url'],
        'urlType': json['urlType'] == null ? undefined : json['urlType'],
    };
}

export function TombstoneRefToJSON(json: any): TombstoneRef {
    return TombstoneRefToJSONTyped(json, false);
}

export function TombstoneRefToJSONTyped(value?: TombstoneRef | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'url': value['url'],
        'urlType': value['urlType'],
    };
}

