/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TweetPreviewDisplayCtaUrl
 */
export interface TweetPreviewDisplayCtaUrl {
    /**
     * 
     * @type {string}
     * @memberof TweetPreviewDisplayCtaUrl
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof TweetPreviewDisplayCtaUrl
     */
    urlType: TweetPreviewDisplayCtaUrlUrlTypeEnum;
}


/**
 * @export
 */
export const TweetPreviewDisplayCtaUrlUrlTypeEnum = {
    DeepLink: 'DeepLink',
    UrtEndpoint: 'UrtEndpoint',
    ExternalUrl: 'ExternalUrl'
} as const;
export type TweetPreviewDisplayCtaUrlUrlTypeEnum = typeof TweetPreviewDisplayCtaUrlUrlTypeEnum[keyof typeof TweetPreviewDisplayCtaUrlUrlTypeEnum];


/**
 * Check if a given object implements the TweetPreviewDisplayCtaUrl interface.
 */
export function instanceOfTweetPreviewDisplayCtaUrl(value: object): value is TweetPreviewDisplayCtaUrl {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('urlType' in value) || value['urlType'] === undefined) return false;
    return true;
}

export function TweetPreviewDisplayCtaUrlFromJSON(json: any): TweetPreviewDisplayCtaUrl {
    return TweetPreviewDisplayCtaUrlFromJSONTyped(json, false);
}

export function TweetPreviewDisplayCtaUrlFromJSONTyped(json: any, ignoreDiscriminator: boolean): TweetPreviewDisplayCtaUrl {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'urlType': json['urlType'],
    };
}

export function TweetPreviewDisplayCtaUrlToJSON(json: any): TweetPreviewDisplayCtaUrl {
    return TweetPreviewDisplayCtaUrlToJSONTyped(json, false);
}

export function TweetPreviewDisplayCtaUrlToJSONTyped(value?: TweetPreviewDisplayCtaUrl | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'urlType': value['urlType'],
    };
}

