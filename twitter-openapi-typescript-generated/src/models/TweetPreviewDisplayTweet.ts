/* tslint:disable */
/* eslint-disable */
/**
 * Twitter OpenAPI
 * Twitter OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserResultCore } from './UserResultCore';
import {
    UserResultCoreFromJSON,
    UserResultCoreFromJSONTyped,
    UserResultCoreToJSON,
    UserResultCoreToJSONTyped,
} from './UserResultCore';
import type { TweetPreviewDisplayTweetViewCount } from './TweetPreviewDisplayTweetViewCount';
import {
    TweetPreviewDisplayTweetViewCountFromJSON,
    TweetPreviewDisplayTweetViewCountFromJSONTyped,
    TweetPreviewDisplayTweetViewCountToJSON,
    TweetPreviewDisplayTweetViewCountToJSONTyped,
} from './TweetPreviewDisplayTweetViewCount';

/**
 * 
 * @export
 * @interface TweetPreviewDisplayTweet
 */
export interface TweetPreviewDisplayTweet {
    /**
     * 
     * @type {number}
     * @memberof TweetPreviewDisplayTweet
     */
    bookmarkCount: number;
    /**
     * 
     * @type {UserResultCore}
     * @memberof TweetPreviewDisplayTweet
     */
    core: UserResultCore;
    /**
     * 
     * @type {string}
     * @memberof TweetPreviewDisplayTweet
     */
    createdAt: string;
    /**
     * 
     * @type {object}
     * @memberof TweetPreviewDisplayTweet
     */
    entities: object;
    /**
     * 
     * @type {number}
     * @memberof TweetPreviewDisplayTweet
     */
    favoriteCount: number;
    /**
     * 
     * @type {number}
     * @memberof TweetPreviewDisplayTweet
     */
    quoteCount: number;
    /**
     * 
     * @type {number}
     * @memberof TweetPreviewDisplayTweet
     */
    replyCount: number;
    /**
     * 
     * @type {string}
     * @memberof TweetPreviewDisplayTweet
     */
    restId: string;
    /**
     * 
     * @type {number}
     * @memberof TweetPreviewDisplayTweet
     */
    retweetCount: number;
    /**
     * 
     * @type {string}
     * @memberof TweetPreviewDisplayTweet
     */
    text: string;
    /**
     * 
     * @type {TweetPreviewDisplayTweetViewCount}
     * @memberof TweetPreviewDisplayTweet
     */
    viewCount: TweetPreviewDisplayTweetViewCount;
}

/**
 * Check if a given object implements the TweetPreviewDisplayTweet interface.
 */
export function instanceOfTweetPreviewDisplayTweet(value: object): value is TweetPreviewDisplayTweet {
    if (!('bookmarkCount' in value) || value['bookmarkCount'] === undefined) return false;
    if (!('core' in value) || value['core'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('entities' in value) || value['entities'] === undefined) return false;
    if (!('favoriteCount' in value) || value['favoriteCount'] === undefined) return false;
    if (!('quoteCount' in value) || value['quoteCount'] === undefined) return false;
    if (!('replyCount' in value) || value['replyCount'] === undefined) return false;
    if (!('restId' in value) || value['restId'] === undefined) return false;
    if (!('retweetCount' in value) || value['retweetCount'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('viewCount' in value) || value['viewCount'] === undefined) return false;
    return true;
}

export function TweetPreviewDisplayTweetFromJSON(json: any): TweetPreviewDisplayTweet {
    return TweetPreviewDisplayTweetFromJSONTyped(json, false);
}

export function TweetPreviewDisplayTweetFromJSONTyped(json: any, ignoreDiscriminator: boolean): TweetPreviewDisplayTweet {
    if (json == null) {
        return json;
    }
    return {
        
        'bookmarkCount': json['bookmark_count'],
        'core': UserResultCoreFromJSON(json['core']),
        'createdAt': json['created_at'],
        'entities': json['entities'],
        'favoriteCount': json['favorite_count'],
        'quoteCount': json['quote_count'],
        'replyCount': json['reply_count'],
        'restId': json['rest_id'],
        'retweetCount': json['retweet_count'],
        'text': json['text'],
        'viewCount': TweetPreviewDisplayTweetViewCountFromJSON(json['view_count']),
    };
}

export function TweetPreviewDisplayTweetToJSON(json: any): TweetPreviewDisplayTweet {
    return TweetPreviewDisplayTweetToJSONTyped(json, false);
}

export function TweetPreviewDisplayTweetToJSONTyped(value?: TweetPreviewDisplayTweet | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bookmark_count': value['bookmarkCount'],
        'core': UserResultCoreToJSON(value['core']),
        'created_at': value['createdAt'],
        'entities': value['entities'],
        'favorite_count': value['favoriteCount'],
        'quote_count': value['quoteCount'],
        'reply_count': value['replyCount'],
        'rest_id': value['restId'],
        'retweet_count': value['retweetCount'],
        'text': value['text'],
        'view_count': TweetPreviewDisplayTweetViewCountToJSON(value['viewCount']),
    };
}

